name: Emscripten

on: [push, pull_request]

env:
  dependencies: '["DiligentCore", "DiligentTools", "DiligentFX", "DiligentSamples"]'

jobs:
  build-win10:
    strategy:
      matrix:
        config: [Debug, Release]

    runs-on: windows-latest
    name: Win10 -> Emscripten, ${{ matrix.config }}

    steps:
    - name: Clone DiligentSamples
      uses: actions/checkout@v2
      with:
        path:       DiligentSamples
        submodules: recursive

    - name: Clone DiligentFX
      uses: actions/checkout@v2
      with:
        repository: 'DiligentGraphics/DiligentFX'
        path:       DiligentFX
        submodules: recursive

    - name: Clone DiligentTools
      uses: actions/checkout@v2
      with:
        repository: 'DiligentGraphics/DiligentTools'
        path:       DiligentTools
        submodules: recursive

    - name: Clone DiligentCore
      uses: actions/checkout@v2
      with:
        repository: 'DiligentGraphics/DiligentCore'
        path:       DiligentCore
        submodules: recursive

    - name: Download and Configure Emscripten Toolchain
      uses: ./DiligentCore/.github/actions/configure-emscripten

    - name: Configure CMake
      uses: ./DiligentCore/.github/actions/configure-cmake
      with:
        platform: emscripten
        workspace: $GITHUB_WORKSPACE
        config: ${{ matrix.config }}
        submodules: ${{ env.dependencies }}
     
    - name: Build
      shell: bash
      run: cmake --build ./build -j2

  build-linux:
    strategy:
      matrix:
        config: [Debug, Release]

    runs-on: ubuntu-latest
    name: Linux -> Emscripten, ${{ matrix.config }}

    steps:
    - name: Clone DiligentSamples
      uses: actions/checkout@v2
      with:
        path:       DiligentSamples
        submodules: recursive

    - name: Clone DiligentFX
      uses: actions/checkout@v2
      with:
        repository: 'DiligentGraphics/DiligentFX'
        path:       DiligentFX
        submodules: recursive

    - name: Clone DiligentTools
      uses: actions/checkout@v2
      with:
        repository: 'DiligentGraphics/DiligentTools'
        path:       DiligentTools
        submodules: recursive

    - name: Clone DiligentCore
      uses: actions/checkout@v2
      with:
        repository: 'DiligentGraphics/DiligentCore'
        path:       DiligentCore
        submodules: recursive

    - name: Download and Configure Emscripten Toolchain
      uses: ./DiligentCore/.github/actions/configure-emscripten

    - name: Configure CMake
      uses: ./DiligentCore/.github/actions/configure-cmake
      with:
        platform: emscripten
        workspace: $GITHUB_WORKSPACE
        config: ${{ matrix.config }}
        submodules: ${{ env.dependencies }}

    - name: Build
      shell: bash
      run: cmake --build ./build -j2

  build-macos:
    strategy:
      matrix:
        config: [Debug]

    runs-on: macos-latest
    name: MacOS -> Emscripten, ${{ matrix.config }}

    steps:
    - name: Clone DiligentSamples
      uses: actions/checkout@v2
      with:
        path:       DiligentSamples
        submodules: recursive

    - name: Clone DiligentFX
      uses: actions/checkout@v2
      with:
        repository: 'DiligentGraphics/DiligentFX'
        path:       DiligentFX
        submodules: recursive

    - name: Clone DiligentTools
      uses: actions/checkout@v2
      with:
        repository: 'DiligentGraphics/DiligentTools'
        path:       DiligentTools
        submodules: recursive

    - name: Clone DiligentCore
      uses: actions/checkout@v2
      with:
        repository: 'DiligentGraphics/DiligentCore'
        path:       DiligentCore
        submodules: recursive

    - name: Download and Configure Emscripten Toolchain
      uses: ./DiligentCore/.github/actions/configure-emscripten

    - name: Configure CMake
      uses: ./DiligentCore/.github/actions/configure-cmake
      with:
        platform: emscripten
        workspace: $GITHUB_WORKSPACE
        config: ${{ matrix.config }}
        submodules: ${{ env.dependencies }}

    - name: Build
      shell: bash
      run: cmake --build ./build -j2
